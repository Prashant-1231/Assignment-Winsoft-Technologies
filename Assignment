****************************************************************************************************************************************************************************
Q1: Replace each array element by its corresponding rank
  Given an array of distinct integers, replace each array element by its corresponding rank in the array.

The minimum array element has the rank 1; the second minimum element has a rank of 2, and so onâ€¦ For example,

Input:  { 10, 8, 15, 12, 6, 20, 1 } 
Output: { 4, 3, 6, 5, 2, 7, 1 }
_____________________________________________________________________________________________________________________________________________________________________________________
// Java program for the above approach 
/*   Author:Prashant Kishor Patil
     Date:04/04/2024
     Time:2:00
*/
import java.util.*; 

class demo { 

	
	static void changeArr(int[] input) 
	{ 
		// Copy input array into newArray 
		int newArray[] = Arrays.copyOfRange(input, 0, input.length); 

	
		Arrays.sort(newArray); 
		int i; 
		
		
		Map<Integer, Integer> ranks = new HashMap<>(); 

		int rank = 1; 

		for (int index = 0; 
			index < newArray.length; index++) { 

			int element = newArray[index]; 

			
			if (ranks.get(element) == null) { 

				ranks.put(element, rank); 
				rank++; 
			} 
		} 

	 
		for (int index = 0; 
			index < input.length; index++) { 

			int element = input[index]; 
			input[index] = ranks.get(input[index]); 
		
		} 
	} 
	public static void main(String[] args) 
	{ 
		
		int[] arr = { 10, 8, 15, 12, 6, 20, 1 }; 

		
		changeArr(arr); 

		
		System .out .println(Arrays .toString(arr)); 
	} 
} 

***********************************************************************************************************************************************************************************

 
Q2: Given a string s, find the length of the longest substring without repeating characters.
Example 1:
Input: s = "abcabcbb"
Output: 3
Explanation: The answer is "abc", with the length of 3.
Example 2:

Input: s = "bbbbb"
Output: 1
Explanation: The answer is "b", with the length of 1.
Example 3:

Input: s = "pwwkew"
Output: 3
Explanation: The answer is "wke", with the length of 3.
Notice that the answer must be a substring, "pwke" is a subsequence and not a substring.
 
Constraints:

0 <= s.length <= 5 * 104
s consists of English letters, digits, symbols and spaces.

______________________________________________________________________________________________________________________________________________________________________________

//The above C++ code works on the principle of sliding window 


/*   Author:Prashant Kishor Patil
     Date:04/04/2024
     Time:2:15
*/
#include <algorithm>
#include <iostream>
#include <bits/stdc++.h>

using namespace std;
int lengthOfLongestSubstring(string str)
{
    int n = str.size();
    int res = 0;  
    for (int i = 0; i < n; i++) {
        vector<bool> visited(256);  
 
        for (int j = i; j < n; j++) {
            if (visited[str[j]] == true)
                break;
            else {
                res = max(res, j - i + 1);
                visited[str[j]] = true;
            }
        }
         visited[str[i]] = false;
    }
    return res;
}


int main() {
    
    string s = "pwwkew";
    cout << lengthOfLongestSubstring(s) << endl;
    return 0;
}

**************************************************************************************************************************************************************************************
Q3:Find non-repeating characters in a string 

Q4:You are given an array of integers. 
Write a C# program to find the frequency of each unique element in the array and 
store the results in a dictionary where the key is the element and the value is its frequency.
Then, print the elements and their frequencies.

Example:
Input:
int[] numbers = { 1, 2, 2, 3, 3, 3, 4, 4, 4, 4 };

Output:
Element: 1, Frequency: 1
Element: 2, Frequency: 2
Element: 3, Frequency: 3
Element: 4, Frequency: 4

____________________________________________________________________________________________________________________________________________________________________________________
//The C++ code to solve assignment question for .NET developer.

/*   Author:Prashant Kishor Patil
     Date:04/04/2024
     Time:2:30
*/

//The C++ code to solve this problem of assignment .NET developer
#include <iostream>
#include <unordered_map>
#include<bits/stdc++.h>

int main() {
    int numbers[] = {1, 2, 2, 3, 3, 3, 4, 4, 4, 4};
    unordered_map<int, int> frequencyMap;

   
    for (int num : numbers) {
        frequencyMap[num]++;
    }

    // Print elements and their frequencies
    for (const auto& pair : frequencyMap) {
        cout << "Element: " << pair.first << ", Frequency: " << pair.second << std::endl;
    }

    return 0;
}
************************************************************************************************************************************************************************************





